# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  windows:
    runs-on: windows-latest
    env:
      PACKAGENAME: jmcomic_py37_windows_x64
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller==4.8
        pip install pywin32==302
        pip install -r src\requirements.txt
    - name: Build
      run: |
        cd src
        cp ..\res\icon\icon.ico .\

        pyinstaller -F -w -i icon.ico start.py
        mv dist jmcomic
        cp ..\LICENSE jmcomic\
        cp ..\CHANGELOG jmcomic\
        cd ..
        mkdir ${{ env.PACKAGENAME }}
        mv src\jmcomic ${{ env.PACKAGENAME }}
        7z a -r "$($Env:PACKAGENAME + '.zip')" "jmcomic"
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}
        retention-days: 7
        
  windows7:
    runs-on: windows-latest
    env:
      PACKAGENAME: jmcomic_py37_windows7_x64
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller==4.6
        pip install pywin32==302
        pip install PySide6==6.1.3
        pip install requests==2.26.0
        pip install urllib3==1.25.11
        pip install pillow==8.3.2
        pip install Pysocks==1.7.1
        pip install bs4==0.0.1
        pip install lxml==4.6.4
        pip install natsort==8.2.0
        pip install pycryptodomex==3.12.0
        pip install waifu2x-vulkan==1.1.6
        pip install jmcomic>=2.4.3
    - name: Build
      run: |
        cd src
        cp ..\res\icon\icon.ico .\
        pyinstaller -F -w -i icon.ico start.py
        mv dist jmcomic
        cp ..\LICENSE jmcomic\
        cp ..\CHANGELOG jmcomic\
        cd ..
        mkdir ${{ env.PACKAGENAME }}
        mv src\jmcomic ${{ env.PACKAGENAME }}
        7z a -r "$($Env:PACKAGENAME + '.zip')" "jmcomic"
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}
        retention-days: 7

  ubuntu:
    runs-on: ubuntu-latest
    env:
      PACKAGENAME: bika_py37_linux
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        sudo apt-get install -y fuse libfuse2
        python -m pip install --upgrade pip
        pip install pyinstaller==4.8
        pip install https://github.com/tonquer/waifu2x-vulkan/releases/download/v1.1.6/waifu2x_vulkan-1.1.6-cp37-cp37m-linux_x86_64.whl
        pip install -r src/requirements.txt
    - name: Build
      run: |
        cd src
        pyinstaller -w start.py
        cd dist
        mkdir -p jmcomic.AppRun/usr/bin
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        cp -r ../../res/appimage/* jmcomic.AppRun/
        cp -r ../../res/icon/logo_round.png jmcomic.AppRun/JMComic.png
        cp -r start/* jmcomic.AppRun/usr/bin/

        mv jmcomic.AppRun/usr/bin/start jmcomic.AppRun/usr/bin/JMComic
        chmod +x jmcomic.AppRun/AppRun
        chmod +x jmcomic.AppRun/usr/bin/JMComic
        ./appimagetool-x86_64.AppImage jmcomic.AppRun
        mv JMComic-x86_64.AppImage ../../${{ env.PACKAGENAME }}-x86_64.AppImage
        cd ../..
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}-x86_64.AppImage
        retention-days: 7